language: go

go:
  - 1.13.x
  - tip

os:
  - linux

services:
  - docker

branches:
    only:
    - main
    - /^v[0-9]+\.[0-9]+\.[0-9]+$/

addons:
  sonarcloud:
    organization: "xmidt-org"
    token:
      secure: "WHln/Wrsr/2dfkNcK9jBta2idx/IhO9JGbmZUAxVpCs7ki0SptyFluC9hV9RT4Ccsgyhoj42gFqy5XTqCyM3OhS45uJ464/lmiUu7VRm8nlDRaCjYEoDYX9HKo3vlIJCGuHdbtJqZMRB0VvlqeChnbBszgx61yqQDxd+3mwDJKzpqPrvrSSefxS7+6BKi+yR73tTRoDHXBH4z45kQGqo6jexyGXfgfHXrPrmqsIEroih8oQKLRqXL4EsZQZDO11te9VtCn+80WMiEzd6cyUK6ECvYosrCe+HGDsqdH6lfK99/YlFU+mREJDPNjBaqUnxLnhul0evYgQ1GiPWFO1BROVjtf43CDMjNXRDnde7Exef1/SJWhNPI2UpY7Aw7Smd7E46yIaHG+DX3SWzj0mcqPI5RReKih8q7cT3lMe3XYxA3qgtsPsl9FBgCpC96VWHq/RWPksPWBhZ2gbMPknMd2pwfd7GS4/eji+6cG4kgv+v3m7TkiNtRaulIL79DOTiYCyqwGotZiHBmvUZOEQfxuMA5V8rBWwvrUxVViVnummtZb1YJlA5LXFhegJZppquoU6wOCrkJm+UtlXsBsSPEEWz892B7JSRd7dG/9na682NaStCVqH1PoVjkj3udPRyOa29tXo5ItCrThp+i7bK+i+3iW3ZqQMcFjkfGhEdtaw="


script:
  - make style codecov

after_success:
  - sonar-scanner -Dproject.settings=./.sonar-project.properties

jobs:
  include:
    - stage: integration
      name: "Integration Tests"
      if: branch = main
      script:
        - make it
    - stage: tag
      name: "Tag For Release"
      if: branch = main
      before_script:
        - echo -e "machine github.com\n  login $GH_TOKEN" > ~/.netrc
      script:
        - export OLD_VERSION=$(make version)
        - git config --global user.name "xmidt-bot"
        - git config --global user.email "$BOT_EMAIL"
        - export TAG=$(cat CHANGELOG.md | perl -0777 -ne 'print "$1" if /.*## \[Unreleased\]\s+## \[(v\d+.\d+.\d+)\].*/s')
        - export TODAY=`date +'%m/%d/%Y'`
        - export NOTES=$(cat CHANGELOG.md | perl -0777 -ne 'print "$ENV{TODAY}\n\n$1\n" if /.*## \[$ENV{TAG}\]\s(.*?)\s+## \[(v\d+.\d+.\d+)\].*/s')
        - if [[ "$TAG" != "" && "$TAG" != "$OLD_VERSION" ]]; then git tag -a "$TAG" -m "$NOTES"; git push origin --tags; echo $?; fi
      after_success: skip

    - stage: release
      name: "Make a Release"
      if: branch != main
      script: skip
      before_deploy:
        - make release-artifacts
      deploy:
        on:
          all_branches: true
          tags: true
        provider: releases
        file_glob: true
        api_key: "$GH_TOKEN"
        file: ./.ignore/*
